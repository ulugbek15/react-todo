{"version":3,"sources":["Components/Todo/Todo.jsx","App.js","index.js"],"names":["Todo","todo","deleteElem","id","checkedElem","isCompleted","defaultChecked","type","onChange","onClick","App","useState","JSON","parse","window","localStorage","getItem","setTodo","e","target","dataset","filteredElem","filter","t","Number","setItem","stringify","findElem","find","onKeyPress","event","code","newTodo","Date","getTime","content","value","trim","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAamBA,MAbnB,YAAgE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,YAE9C,OACI,mCACA,+BACA,uBAAOC,eAAgBD,EAAaE,KAAK,WAAW,UAASJ,EAAIK,SAAUJ,IAC3E,+BAAOH,IAFP,IAEoB,wBAAQ,UAASE,EAAIM,QAASP,EAA9B,qBC4DTQ,MA9DnB,WAEE,MAAsBC,mBAASC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,WAAa,IAAnF,mBAAKf,EAAL,KAAWgB,EAAX,KAGA,SAASf,EAAWgB,GAClB,IAAMf,EAAKe,EAAEC,OAAOC,QAAQjB,GAEtBkB,EAAepB,EAAKqB,QAAO,SAAAC,GAAC,OAAIA,EAAEpB,KAAOqB,OAAOrB,MAEtDc,EAAQI,GAERP,OAAOC,aAAaU,QAAQ,QAASb,KAAKc,UAAUzB,IAGtD,SAASG,EAAYc,GACnB,IAAMf,EAAKe,EAAEC,OAAOC,QAAQjB,GAEtBwB,EAAW1B,EAAK2B,MAAK,SAAAL,GAAC,OAAIA,EAAEpB,KAAOqB,OAAOrB,MAEhDwB,EAAStB,aAAesB,EAAStB,YAGjCS,OAAOC,aAAaU,QAAQ,QAASb,KAAKc,UAAUzB,IAuBtD,OAHAa,OAAOC,aAAaU,QAAQ,QAASb,KAAKc,UAAUzB,IAIlD,qCACA,uBAAOM,KAAK,OAAOsB,WArBrB,SAAgBC,GACd,GAAkB,UAAfA,EAAMC,KAAiB,CAExB,IAAIC,EAAU,CACZ7B,IAAI,IAAI8B,MAAOC,UACfC,QAASL,EAAMX,OAAOiB,MAAMC,OAC5BhC,aAAa,GAGfY,EAAQ,CAACe,GAAF,mBAAc/B,KAErBa,OAAOC,aAAaU,QAAQ,QAASb,KAAKc,UAAUzB,IACpD6B,EAAMX,OAAOiB,MAAQ,SAWtBnC,EAAKqC,KAAI,SAAAf,GAAC,OAAI,cAAC,EAAD,CAEbpB,GAAIoB,EAAEpB,GACNF,KAAMsB,EAAEY,QACRjC,WAAYA,EACZE,YAAaA,EACbC,YAAakB,EAAElB,aALVkB,EAAEpB,WCnDboC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8cb50aad.chunk.js","sourcesContent":["function Todo({todo, deleteElem, id, checkedElem, isCompleted}){\r\n    \r\n    return(\r\n        <>\r\n        <ul>\r\n        <input defaultChecked={isCompleted} type=\"checkbox\" data-id={id} onChange={checkedElem} />\r\n        <span>{todo}</span> <button data-id={id} onClick={deleteElem}>X</button>\r\n        </ul>\r\n        </>\r\n        ) \r\n        \r\n    }\r\n    \r\n    export default Todo","import { useState } from 'react';\nimport './App.scss';\nimport Todo from './Components/Todo/Todo'\n\nfunction App() {\n  \n  let [todo, setTodo] = useState(JSON.parse(window.localStorage.getItem('todos')) || [])\n  \n  \n  function deleteElem(e){\n    const id = e.target.dataset.id\n    \n    const filteredElem = todo.filter(t => t.id !== Number(id))\n    \n    setTodo(filteredElem)\n    \n    window.localStorage.setItem('todos', JSON.stringify(todo))\n  }\n  \n  function checkedElem(e){\n    const id = e.target.dataset.id\n    \n    const findElem = todo.find(t => t.id === Number(id))\n\n    findElem.isCompleted = !findElem.isCompleted\n  \n\n    window.localStorage.setItem('todos', JSON.stringify(todo))\n\n  }\n  \n  function handle(event){\n    if(event.code === 'Enter'){\n      \n      let newTodo = {\n        id: new Date().getTime(),\n        content: event.target.value.trim(),\n        isCompleted: false\n      }\n      \n      setTodo([newTodo, ...todo])\n      \n      window.localStorage.setItem('todos', JSON.stringify(todo))\n      event.target.value = null;\n    }\n  }\n  \n  window.localStorage.setItem('todos', JSON.stringify(todo))\n  \n  \n  return (\n    <>\n    <input type=\"text\" onKeyPress={handle}/>\n    \n    {todo.map(t => <Todo\n      key={t.id}\n      id={t.id}\n      todo={t.content}\n      deleteElem={deleteElem}\n      checkedElem={checkedElem}\n      isCompleted={t.isCompleted}\n      />)}\n      </>\n      );\n    }\n    \n    export default App;\n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}